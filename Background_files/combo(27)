YUI.add("person-contacts-count-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ModelFetchers["flickr-people-contacts-getInfo"].run(t,this.appContext)}},attributes:{followerCount:{defaultFn:function(){return 0}},followingCount:{defaultFn:function(){return 0}},pathAlias:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)||undefined}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-people-contacts-getInfo-fetcher","attribute-helpers"]});
YUI.add("flickr-people-contacts-getInfo-fetcher",function(e,t){"use strict";function n(e){var t={datecreate:1,extras:"rev_contacts, contacts"};e.extras&&typeof e.extras=="string"&&e.extras.length>0&&(t.extras=t.extras+","+e.extras);if(e.id)t.user_id=e.id;else{if(!e.pathAlias)throw new Error("`fetch` is missing required params.");t.url=e.pathAlias}return t}function r(e){var t=e.apiResponse,n=e.personContactsModelRegistry,r=t.person,i=r.id;return n.addOrUpdate({id:i,followerCount:r.revContacts&&parseInt(r.revContacts._content,10),followingCount:parseInt(r.contacts,10),pathAlias:r.pathAlias}),r}function i(n,r){var i=this;return(new e.FlickrPromise({apiResponse:r.callAPI("flickr.people.getInfo",this._processParams(n)),personContactsModelRegistry:r.getModelRegistry("person-contacts-count-models")})).then(function(e){return i._processResponse(e,n)},e.FetcherErrorLogger(t))}e.namespace("ModelFetchers")["flickr-people-contacts-getInfo"]={run:i,_processParams:n,_processResponse:r}},"@VERSION@",{requires:["flickr-promise"],optional:["person-contacts-count-models","api-helper"]});
